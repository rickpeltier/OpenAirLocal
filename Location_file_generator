
library(worldmet)
library(dplyr)
library(purrr)
library(tidyverse)
library(ropenaq)

#this script a) creates a list of all openAQ sites, b) creates a list of all NOAA ISD sites,, c) removes known bad ISD sites, d) identify and appends
#the nearest valid ISD site to the openAQ site and appends this to df.

locations<-aq_locations()

locations$latitude <- as.numeric(locations$latitude)
locations$longitude <- as.numeric(locations$longitude)


# get locations of met sites
meta <- getMeta(returnMap = FALSE, plot = FALSE)

id <- which(meta$code %in% bad_site_list$X2) #list row numbers in meta where bad ISD sites are
meta <- meta[-id, ] #delete bad sites from meta

## approximate distance to site using Great Circle distances

findDist <- function(lat, lon) {
  if (!missing(lat) && !missing(lon)) {
    r <- 6371 # radius of the Earth
    
    ## Coordinates need to be in radians
    meta$longR <- meta$longitude * pi / 180
    meta$latR <- meta$latitude * pi / 180
    LON <- lon * pi / 180
    LAT <- lat * pi / 180
    meta$dist <- acos(sin(LAT) * sin(meta$latR) + cos(LAT) * 
                        cos(meta$latR) * cos(meta$longR - LON)) * r
    
    ## sort and return top n nearest
        meta <- head(openair:::sortDataFrame(meta, key = "dist"), 1)
    
    result <- select(meta, code = code, distance = dist, station = STATION)
    
  } else {
    result <- data.frame(code = meta$code, distance = NA, station = NA)
  }
  return(result)
}

# go through AQ sites
nearest <- map2_dfr(locations$latitude, locations$longitude, findDist)
locations <- bind_cols(locations, nearest)

locations$distance<-round(locations$distance1, 2) #round distance to two places for readability

saveRDS(locations,"~/OAL/locations.RDS")
remove('meta')
remove('nearest')
